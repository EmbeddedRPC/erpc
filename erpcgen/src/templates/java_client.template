/** 
 * Generated by erpcgen {$erpcVersion} on {$todaysDate}.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */
 {% set iface = interface %}
package {$groupPackage}.client;

import {$groupPackage}.interfaces.I{$iface.name};
{% if not empty(group.symbolsMap.structs) %}import {$groupPackage}.common.structs.*;{% elif not empty(structs)%}import {$groupPackage}.common.structs.*;{% endif %}
{% if not empty(enums)%}import {$groupPackage}.common.enums.*;{% endif %}

{%  for inc in includes %}
import {$inc};
{%  endfor -- includes %}

import com.nxp.erpc.auxiliary.MessageType;
import com.nxp.erpc.auxiliary.MessageInfo;
import com.nxp.erpc.auxiliary.RequestContext;
import com.nxp.erpc.auxiliary.Reference;
import com.nxp.erpc.auxiliary.Utils;
import com.nxp.erpc.client.ClientManager;
import com.nxp.erpc.codec.Codec;

import java.util.ArrayList;
import java.util.List;

public class {$iface.name}Client implements I{$iface.name} {
    private final ClientManager clientManager;

    public {$iface.name}Client(ClientManager clientManager) {
        this.clientManager = clientManager;
    }
{% for fn in iface.functions %}
{$loop.addNewLineIfNotLast}
    @Override
    public {$fn.prototype} {
        // Create request
        RequestContext request = clientManager.createRequest({% if fn.isOneway %}true{% else %}false{% endif %});
        Codec codec = request.codec();

        // Write message info
        codec.startWriteMessage(new MessageInfo(
                MessageType.{% if fn.isReturnValue %}kInvocationMessage{% else %}kOnewayMessage{% endif %},
                this.SERVICE_ID,
                this.{$upper(fn.name)}_ID,
                request.sequence()));

        // Write message data
{%  for p in fn.inParameters if not p.serializedViaMember %}
{%     if p.isNullable %}
        if({$p.name} == null) {
            codec.writeNullFlag(1);
        } else {
            codec.writeNullFlag(0);
{$          addIndent("            ", p.call.encode(p.call))}
        }
{%     else %}
        Utils.checkNotNull({$p.name}, "{$p.name} is null");
        {% if p.call.isReference%}Utils.checkNotNull({$p.name}.get(), "{$p.name}.value is null");{% endif %}
{$      addIndent("        ", p.call.encode(p.call))}
{%     endif -- isNullable %}
{% endfor -- inParams %}

        // Perform request
        clientManager.performRequest(request);

{%  if not fn.isOneway %}
        // Read out parameters
{% for p in fn.outParameters if not p.serializedViaMember %}
{%     if p.isNullable %}
        if(!codec.readNullFlag()) {
{$         addIndent("            ", p.call.decode(p.call))}
        }
{%     else %}
{$         addIndent("        ", p.call.decode(p.call))}
{%     endif -- isNullable %}
{% endfor -- outParams %}
{%      if fn.isReturnValue && fn.returnValue.type.type != "void" %}

        // Read return value
{$      addIndent("        ",  fn.returnValue.call.decode(fn.returnValue.call))}
        return {$fn.returnValue.call.name};
{%      endif -- returnValue %}
{%  endif -- oneway %}
    }
{% endfor -- fn %}
}
