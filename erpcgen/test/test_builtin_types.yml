---
name: scalar params
desc: tests scalar builtin types for both void and oneway functions
params:
  fns:
    - fore: oneway
      after: ""
    - fore: ""
      after: -> void
  type:
    - int8
    - int16
    - int32
    - uint8
    - uint16
    - uint32
    - bool
    - float
    - double
idl: |
  interface myintf {
    {fns[fore]} somefunc({type} i) {fns[after]}
  }
test.h:
  - if: not type in ('bool', 'float', 'double')
    then:
      - void somefunc({type}_t i);
    else:
      - void somefunc({type} i);

---
name: scalar return
desc: tests scalar builtin return value types
params:
  type:
    - int8
    - int16
    - int32
    - uint8
    - uint16
    - uint32
    - bool
    - float
    - double
idl: |
  interface myintf {
    somefunc() -> {type}
  }
test.h:
  - if: not type in ('bool', 'float', 'double')
    then:
      - '{type}_t somefunc(void);'
    else:
      - '{type} somefunc(void);'

---
name: scalar struct
desc: tests scalar struct fields
params:
  type:
    - int8
    - int16
    - int32
    - uint8
    - uint16
    - uint32
    - bool
    - float
    - double
idl: |
  struct structwithint {
    {type} i
  }
test.h:
  - 'struct structwithint {'
  - if: not type in ('bool', 'float', 'double')
    then:
      - '{type}_t i'
    else:
      - '{type} i'
  - '}'
