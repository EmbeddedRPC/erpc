---
name: in param struct
desc:
idl: |
 struct Vector {
   float[3] v
 }
 interface foo {
   bar(Vector v @nullable) -> void
 }
lang: py
test/client.py:
  - if v is None
  - write_null_flag(True
  - else
  - write_null_flag(False
  - v._write
test/server.py:
  - def _handle_
  - 'if not codec.read_null_flag():'
  - Vector()._read
  - else
  - v = None

---
name: out param struct
desc:
idl: |
 struct Vector {
   float[3] v
 }
 interface foo {
   bar(out Vector v @nullable) -> void
 }
lang: py
test/client.py:
  - assert type(v) is erpc.Reference
  - Vector()._read
test/server.py:
  - v = erpc.Reference
  - 'if v.value != None:'
  - v.value._write

---
name: struct field
desc:
params:
  type:
    - string
    - list<bool>
idl: |
 struct pair {
   {type} b @nullable
 }
 interface foo {
   bar(pair s) -> void
 }
lang: py
test/common.py:
  - _read
  - read_null_flag
  - if: type=="list<bool>"
    then:
      - start_read_list
      - re: read_[a-z]+
    else:
      - read_string
  - else
  - self.b = None
  - _write
  - if self.b is None
  - write_null_flag(True
  - else
  - write_null_flag(False
  - if: type=="list<bool>"
    then:
      - start_write_list
      - write_bool
    else:
      - write_string
