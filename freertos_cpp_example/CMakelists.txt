# in order to run this, use the following command on the command line: 
# cmake -DCMAKE_TOOLCHAIN_FILE=../Toolchain_ticomp.cmake ..

cmake_minimum_required(VERSION 3.10)

set (CMAKE_CONFIGURATION_TYPES "Debug;Release")

project(eRPC)
# Example eRPC application
set(ERPC_DIR "/Users/sramnath/erpc")

set (ERPC_DEFINITIONS ERPC_DEBUG=1)

# set(CMAKE_VERBOSE_MAKEFILE ON)

# Generate docs before creating source package
# include(${ERPC_DIR}/contrib/ports/CMakeCommon.cmake)

# add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
# if (TARGET lwipdocs)
#   add_dependencies(dist lwipdocs)
# endif()

# set(TIRTOS_XDC_RT "/Applications/ti_ccs9/xdctools_3_32_00_06_core")
# set(TIRTOS_BIOS_RT "/Applications/ti_ccs9/tirtos_cc13xx_cc26xx_2_21_01_08/products/bios_6_46_01_38/packages/ti/sysbios")
# set(TIRTOS_BIOS_INC "/Applications/ti_ccs9/tirtos_cc13xx_cc26xx_2_21_01_08/products/bios_6_46_01_38/packages")
# set(TIRTOS_TARGET_INC "/Applications/ti_ccs9/tirtos_cc13xx_cc26xx_2_21_01_08/products/bios_6_46_01_38/packages") 
# set(TIRTOS_SDK "/Applications/ti_ccs9/simplelink_cc13x2_26x2_sdk_3_20_00_68")

set(CMAKE_COMPILER_PATH "/usr/bin/gcc")

set(ERPC_SRCS
	${TIRTOS_XDC_RT}/packages
	${TIRTOS_BIOS_RT}
	${TIRTOS_BIOS_INC}
	${TIRTOS_BIOS_INC}/gnu/targets
	${TIRTOS_TARGET_INC}
	${TIRTOS_COMPILER}
	${TIRTOS_SDK}/source
	${TIRTOS_SDK}/source/ti/posix/ccs
	${TIRTOS_SDK}/source/ti/display
)

set (ERPC_INCLUDE_DIRS
    "${ERPC_DIR}/copy_matrix"
    "${ERPC_DIR}/erpc_c/infra"
    "${ERPC_DIR}/erpc_c/port"
    "${ERPC_DIR}/erpc_c/config"
    "${ERPC_DIR}/erpc_c/transports"
    "${ERPC_DIR}/erpc_c/setup"
)

set (ERPC_OBJ_DIR "/ERPC_DIR/Debug/Darwin/erpc/obj/erpc_c")


set (ERPC_INCLUDE_OBJS	
    "${ERPC_OBJ/DIR}/infra/"
    "${ERPC_OBJ/DIR}/port/"
    "${ERPC_OBJ/DIR}/setup/"
    "${ERPC_OBJ/DIR}/transports/"
)


set (LWIP_COMPILE_OPTIONS
        "-Dxdc_target_types__=${TIRTOS_BIOS_INC}/ti/targets/arm/std.h"
        "-Dxdc_target_name__=C64P"
	"-DDeviceFamily_CC13X2"
)


set (ERPC_CCOPTS
 	"-mv7M4 --code_state=16 --float_support=fpv4spd16 --endian=little --abi=eabi -q -ms --opt_for_speed=0 --program_level_compile -O0  --printf_support=full  --cmd_file=/Users/sramnath/ccs_workspaces/sdk_3_2/spiEthernet/tirtos_builds_CC1352P1_LAUNCHXL_release_ccs/Debug/configPkg/compiler.opt"   )


set(server_SRCS
        ${ERPC_DIR}/copy_matrix/main.c
        ${ERPC_DIR}/copy_matrix/service/erpc_matrix_multiply/erpc_matrix_multiply_server.cpp
)

set (client_SRCS
        ${ERPC_DIR}/copy_matrix/main.c
        ${ERPC_DIR}/copy_matrix/service/erpc_matrix_multiply/erpc_matrix_multiply_client.cpp
)

# Compiler options

set(CMAKE_C_FLAGS " ${ERPC_CCOPTS}  -I ${TIRTOS_SDK}/kernel/tirtos/packages" CACHE STRING "" FORCE)

add_library(erpc_client EXCLUDE_FROM_ALL ${client_SRCS})
target_include_directories(erpc_client PRIVATE ${ERPC_INCLUDE_DIRS})
target_compile_options(erpc_client PRIVATE ${ERPC_COMPILER_FLAGS} ${ERPC_COMPILER_OPTIONS})

# include(${LWIP_DIR}/src/Filelists.cmake)
# include(${LWIP_DIR}/contrib/Filelists.cmake)
# include(${LWIP_DIR}/contrib/ports/tirtos/Filelists.cmake)


# set(LINKER_SCRIPT "${ERPC_DIR}/CC1352P1_LAUNCHXL_TIRTOS.cmd")
add_executable(test.out ${LWIP_DIR}/main_tirtos.c )#${cc1352p1_board_SRCS})
target_include_directories(test.out PRIVATE ${LWIP_INCLUDE_DIRS})
target_compile_options(test.out PRIVATE ${LWIP_COMPILER_FLAGS} ${LWIP_COMPILER_OPTIONS})

add_link_options(test.out ../CC1352P1_LAUNCHXL_TIRTOS.cmd) 
target_link_libraries(test.out lwipcontribapps lwipboard lwipcontribporttirtos  lwipcontribexamples lwipcore ${CMAKE_COMPILER_PATH}/lib/libc.a ${cc1352p1_libs})
add_definitions( ${LWIP_COMPILE_OPTIONS}) #   ${LWIP_BIOS_OPTS} )


# Run this command because linking will fail with this cmake file - but use the compiled binaries produced by this cmake file 

 
