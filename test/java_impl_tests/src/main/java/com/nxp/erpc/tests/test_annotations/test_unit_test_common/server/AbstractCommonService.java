/** 
 * Generated by erpcgen 1.12.0 on Mon Oct 30 10:47:32 2023.
 * 
 * AUTOGENERATED - DO NOT EDIT
 */
package com.nxp.erpc.tests.test_annotations.test_unit_test_common.server;

import com.nxp.erpc.tests.test_annotations.test_unit_test_common.interfaces.ICommon;



import com.nxp.erpc.auxiliary.MessageInfo;
import com.nxp.erpc.auxiliary.MessageType;
import com.nxp.erpc.codec.Codec;
import com.nxp.erpc.server.Service;
import com.nxp.erpc.auxiliary.Reference;

import com.nxp.erpc.tests.common.myEnum;

import java.util.ArrayList;
import java.util.List;

/**
 * Testing abstract service class for simple eRPC interface.
 */
public abstract class AbstractCommonService
        extends Service
        implements ICommon {

    /**
     * Default constructor.
     */
    public AbstractCommonService() {
        super(ICommon.SERVICE_ID);
        addMethodHandler(ICommon.QUIT_ID, this::quitHandler);
        addMethodHandler(ICommon.GETSERVERALLOCATED_ID, this::getServerAllocatedHandler);
    }

    private void quitHandler(int sequence, Codec codec) {


        quit();

        codec.reset();

    }
    private void getServerAllocatedHandler(int sequence, Codec codec) {


        int _result = getServerAllocated();

        codec.reset();

        codec.startWriteMessage(new MessageInfo(
                MessageType.kReplyMessage,
                getServiceId(),
                ICommon.GETSERVERALLOCATED_ID,
                sequence)
        );

        // Read out parameters
        // Read return value
        codec.writeInt32(_result);
    }

}

